@model C√ºzdan_Uygulamasƒ±.BusinessLogic.DTOs.CategoryDto
@{
    ViewData["Title"] = $"{Model.Name} - Kategori Detaylarƒ±";
}

<style>
    :root {
        --bg: #f5f5f7;
        --card: #ffffff;
        --text: #1d1d1f;
        --muted: #6e6e73;
        --blue: #007aff;
        --green: #28a745;
        --red: #dc3545;
        --border: rgba(0, 0, 0, 0.08);
        --shadow: 0 8px 30px rgba(0, 0, 0, 0.08);
        --radius: 16px;
    }

    .category-header {
        background: var(--card);
        border: 1px solid var(--border);
        border-radius: var(--radius);
        box-shadow: var(--shadow);
        padding: 24px;
        margin-bottom: 24px;
    }

    .category-info {
        background: var(--card);
        border: 1px solid var(--border);
        border-radius: var(--radius);
        box-shadow: var(--shadow);
        padding: 24px;
        margin-bottom: 20px;
    }

    .transaction-card {
        background: var(--card);
        border: 1px solid var(--border);
        border-radius: var(--radius);
        box-shadow: var(--shadow);
        transition: transform 0.2s ease, box-shadow 0.2s ease;
        margin-bottom: 12px;
    }

    .transaction-card:hover {
        transform: translateY(-1px);
        box-shadow: 0 12px 40px rgba(0, 0, 0, 0.1);
    }

    .btn-apple {
        background: #000;
        color: white;
        border: none;
        border-radius: 12px;
        padding: 10px 20px;
        font-weight: 600;
        transition: all 0.2s ease;
    }

    .btn-apple:hover {
        background: #333;
        color: white;
        transform: translateY(-1px);
    }

    .category-icon-large {
        width: 80px;
        height: 80px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 2.5rem;
        color: white;
        margin: 0 auto 20px;
    }

    .income-indicator { color: var(--green); }
    .expense-indicator { color: var(--red); }
    
    .empty-state {
        text-align: center;
        padding: 60px 20px;
        color: var(--muted);
    }

    .detail-row {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 15px 0;
        border-bottom: 1px solid var(--border);
    }

    .detail-row:last-child {
        border-bottom: none;
    }

    .detail-label {
        font-weight: 600;
        color: var(--muted);
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .detail-value {
        color: var(--text);
        font-weight: 500;
    }

    .stats-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 20px;
        margin-bottom: 20px;
    }

    .stat-card {
        background: var(--card);
        border: 1px solid var(--border);
        border-radius: 12px;
        padding: 20px;
        text-align: center;
    }

    .stat-icon {
        font-size: 2rem;
        margin-bottom: 12px;
    }

    .stat-title {
        font-size: 0.9rem;
        color: var(--muted);
        margin-bottom: 8px;
    }

    .stat-value {
        font-size: 1.2rem;
        font-weight: 700;
        color: var(--text);
    }
</style>

<div class="container-fluid px-4">
    <!-- Header -->
    <div class="category-header">
        <div class="row align-items-center">
            <div class="col">
                <h2 class="mb-1">üè∑Ô∏è @Model.Name</h2>
                <p class="text-muted mb-0">@(!string.IsNullOrEmpty(Model.Description) ? Model.Description : "Kategori detaylarƒ± ve i≈ülemleri")</p>
            </div>
            <div class="col-auto">
                <div class="btn-group">
                    <a asp-controller="Transaction" asp-action="Create" asp-route-categoryId="@Model.Id" 
                       class="btn btn-apple">
                        <i class="fas fa-plus me-2"></i>Yeni ƒ∞≈ülem
                    </a>
                    <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-outline-primary">
                        <i class="fas fa-edit me-2"></i>D√ºzenle
                    </a>
                    <a asp-action="Index" class="btn btn-outline-secondary">
                        <i class="fas fa-arrow-left me-2"></i>Geri D√∂n
                    </a>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- Category Info -->
        <div class="col-md-4 mb-4">
            <div class="category-info">
                <div class="text-center">
                    @{
                        var backgroundColor = !string.IsNullOrEmpty(Model.Color) ? Model.Color : "#007aff";
                        var iconClass = !string.IsNullOrEmpty(Model.Icon) ? Model.Icon : "fas fa-tag";
                    }
                    <div class="category-icon-large" style="background-color: @backgroundColor;">
                        <i class="@iconClass"></i>
                    </div>
                    <h4 class="mb-3">@Model.Name</h4>
                </div>

                <div class="detail-row">
                    <div class="detail-label">
                        <i class="fas fa-tag"></i>
                        Kategori Adƒ±
                    </div>
                    <div class="detail-value">@Model.Name</div>
                </div>

                <div class="detail-row">
                    <div class="detail-label">
                        <i class="fas fa-align-left"></i>
                        A√ßƒ±klama
                    </div>
                    <div class="detail-value">
                        @(string.IsNullOrEmpty(Model.Description) ? "Belirtilmemi≈ü" : Model.Description)
                    </div>
                </div>

                <div class="detail-row">
                    <div class="detail-label">
                        <i class="fas fa-palette"></i>
                        Renk
                    </div>
                    <div class="detail-value">
                        <span class="d-inline-flex align-items-center">
                            <div style="width: 20px; height: 20px; border-radius: 50%; background: @backgroundColor; border: 2px solid white; box-shadow: 0 2px 4px rgba(0,0,0,0.1); margin-right: 8px;"></div>
                            @backgroundColor
                        </span>
                    </div>
                </div>

                <div class="detail-row">
                    <div class="detail-label">
                        <i class="fas fa-icons"></i>
                        ƒ∞kon
                    </div>
                    <div class="detail-value">
                        <i class="@iconClass me-2"></i>@iconClass
                    </div>
                </div>

                <div class="detail-row">
                    <div class="detail-label">
                        <i class="fas fa-clock"></i>
                        Olu≈üturma Tarihi
                    </div>
                    <div class="detail-value">@Model.CreatedDate.ToString("dd MMMM yyyy")</div>
                </div>
            </div>

            <!-- Quick Stats -->
            <div class="stats-grid">
                <div class="stat-card">
                    <div class="stat-icon text-primary">
                        <i class="fas fa-receipt"></i>
                    </div>
                    <div class="stat-title">Toplam ƒ∞≈ülem</div>
                    <div class="stat-value">@Model.Transactions.Count()</div>
                </div>
                
                <div class="stat-card">
                    <div class="stat-icon text-success">
                        <i class="fas fa-arrow-up"></i>
                    </div>
                    <div class="stat-title">Toplam Gelir</div>
                    <div class="stat-value text-success">
                        ‚Ç∫@Model.Transactions.Where(t => t.Type == C√ºzdan_Uygulamasƒ±.Models.TransactionType.Income).Sum(t => t.Amount).ToString("N2")
                    </div>
                </div>
                
                <div class="stat-card">
                    <div class="stat-icon text-danger">
                        <i class="fas fa-arrow-down"></i>
                    </div>
                    <div class="stat-title">Toplam Gider</div>
                    <div class="stat-value text-danger">
                        ‚Ç∫@Model.Transactions.Where(t => t.Type == C√ºzdan_Uygulamasƒ±.Models.TransactionType.Expense).Sum(t => t.Amount).ToString("N2")
                    </div>
                </div>
                
                <div class="stat-card">
                    <div class="stat-icon text-info">
                        <i class="fas fa-calculator"></i>
                    </div>
                    <div class="stat-title">Net Tutar</div>
                    @{
                        var netAmount = Model.Transactions.Where(t => t.Type == C√ºzdan_Uygulamasƒ±.Models.TransactionType.Income).Sum(t => t.Amount) -
                                       Model.Transactions.Where(t => t.Type == C√ºzdan_Uygulamasƒ±.Models.TransactionType.Expense).Sum(t => t.Amount);
                    }
                    <div class="stat-value @(netAmount >= 0 ? "text-success" : "text-danger")">
                        ‚Ç∫@netAmount.ToString("N2")
                    </div>
                </div>
            </div>
        </div>

        <!-- Transactions -->
        <div class="col-md-8">
            <div class="d-flex justify-content-between align-items-center mb-3">
                <h5 class="mb-0">Bu Kategorideki ƒ∞≈ülemler</h5>
                <a asp-controller="Transaction" asp-action="Index" asp-route-categoryId="@Model.Id" 
                   class="btn btn-sm btn-outline-primary">
                    T√ºm√ºn√º G√∂r
                </a>
            </div>

            @if (Model.Transactions.Any())
            {
                @foreach (var transaction in Model.Transactions.OrderByDescending(t => t.TransactionDate).Take(10))
                {
                    <div class="transaction-card">
                        <div class="card-body py-3">
                            <div class="row align-items-center">
                                <div class="col-auto">
                                    <div class="@(transaction.Type == C√ºzdan_Uygulamasƒ±.Models.TransactionType.Income ? "income-indicator" : "expense-indicator")">
                                        <i class="fas @(transaction.Type == C√ºzdan_Uygulamasƒ±.Models.TransactionType.Income ? "fa-arrow-up" : "fa-arrow-down") fa-lg"></i>
                                    </div>
                                </div>
                                <div class="col">
                                    <h6 class="mb-1">@transaction.Description</h6>
                                    <p class="text-muted small mb-0">
                                        @transaction.Account?.Name ‚Ä¢
                                        @transaction.TransactionDate.ToString("dd MMM yyyy, HH:mm")
                                        @if (transaction.IsRecurring)
                                        {
                                            <span class="badge bg-info text-white ms-1">
                                                <i class="fas fa-sync-alt me-1"></i>Otomatik
                                            </span>
                                        }
                                    </p>
                                </div>
                                <div class="col-auto text-end">
                                    <h6 class="mb-0 @(transaction.Type == C√ºzdan_Uygulamasƒ±.Models.TransactionType.Income ? "text-success" : "text-danger")">
                                        @(transaction.Type == C√ºzdan_Uygulamasƒ±.Models.TransactionType.Income ? "+" : "-")‚Ç∫@transaction.Amount.ToString("N2")
                                    </h6>
                                    <div class="btn-group">
                                        <a asp-controller="Transaction" asp-action="Details" asp-route-id="@transaction.Id" 
                                           class="btn btn-sm btn-outline-primary">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        <a asp-controller="Transaction" asp-action="Edit" asp-route-id="@transaction.Id" 
                                           class="btn btn-sm btn-outline-warning">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }

                @if (Model.Transactions.Count() > 10)
                {
                    <div class="text-center mt-3">
                        <p class="text-muted">@(Model.Transactions.Count() - 10) adet daha i≈ülem var.</p>
                        <a asp-controller="Transaction" asp-action="Index" asp-route-categoryId="@Model.Id" 
                           class="btn btn-outline-primary">
                            T√ºm ƒ∞≈ülemleri G√∂r√ºnt√ºle
                        </a>
                    </div>
                }
            }
            else
            {
                <div class="card border-0 shadow-sm">
                    <div class="card-body empty-state">
                        <i class="fas fa-receipt fa-3x mb-3"></i>
                        <h5>Bu kategoride hen√ºz i≈ülem bulunmuyor</h5>
                        <p>Bu kategoriye ait i≈ülem eklediƒüinizde burada g√∂r√ºnecek.</p>
                        <a asp-controller="Transaction" asp-action="Create" asp-route-categoryId="@Model.Id" 
                           class="btn btn-apple">
                            <i class="fas fa-plus me-2"></i>ƒ∞lk ƒ∞≈ülemi Ekle
                        </a>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        // Success/Error messages
        @if (TempData["Success"] != null)
        {
            <text>
            Swal.fire({
                icon: 'success',
                title: 'Ba≈üarƒ±lƒ±!',
                text: '@Html.Raw(TempData["Success"])',
                timer: 3000,
                showConfirmButton: false
            });
            </text>
        }

        @if (TempData["Error"] != null)
        {
            <text>
            Swal.fire({
                icon: 'error',
                title: 'Hata!',
                text: '@Html.Raw(TempData["Error"])'
            });
            </text>
        }
    </script>
}