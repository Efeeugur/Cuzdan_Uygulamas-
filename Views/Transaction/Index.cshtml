@model IEnumerable<CÃ¼zdan_UygulamasÄ±.BusinessLogic.DTOs.TransactionDto>
@{
    ViewData["Title"] = "Gelir/Gider Ä°ÅŸlemleri";
    var summary = ViewBag.Summary as CÃ¼zdan_UygulamasÄ±.BusinessLogic.DTOs.TransactionSummaryDto;
    var filter = ViewBag.Filter as CÃ¼zdan_UygulamasÄ±.BusinessLogic.DTOs.TransactionFilterDto;
    var filterAccounts = ViewBag.FilterAccounts as Microsoft.AspNetCore.Mvc.Rendering.SelectList;
    var filterCategories = ViewBag.FilterCategories as IEnumerable<Microsoft.AspNetCore.Mvc.Rendering.SelectListItem>;
    var filterTransactionTypes = ViewBag.FilterTransactionTypes as Microsoft.AspNetCore.Mvc.Rendering.SelectList;
    var filterRecurringOptions = ViewBag.FilterRecurringOptions as Microsoft.AspNetCore.Mvc.Rendering.SelectList;
}

<style>
    :root {
        --bg: #f5f5f7;
        --card: #ffffff;
        --text: #1d1d1f;
        --muted: #6e6e73;
        --blue: #007aff;
        --green: #28a745;
        --red: #dc3545;
        --border: rgba(0, 0, 0, 0.08);
        --shadow: 0 8px 30px rgba(0, 0, 0, 0.08);
        --radius: 16px;
    }

    .transaction-header {
        background: var(--card);
        border: 1px solid var(--border);
        border-radius: var(--radius);
        box-shadow: var(--shadow);
        padding: 24px;
        margin-bottom: 24px;
    }

    .transaction-card {
        background: var(--card);
        border: 1px solid var(--border);
        border-radius: var(--radius);
        box-shadow: var(--shadow);
        transition: transform 0.2s ease, box-shadow 0.2s ease;
        margin-bottom: 12px;
    }

    .transaction-card:hover {
        transform: translateY(-1px);
        box-shadow: 0 12px 40px rgba(0, 0, 0, 0.1);
    }

    .btn-apple {
        background: #000;
        color: white;
        border: none;
        border-radius: 12px;
        padding: 10px 20px;
        font-weight: 600;
        transition: all 0.2s ease;
    }

    .btn-apple:hover {
        background: #333;
        color: white;
        transform: translateY(-1px);
    }

    .income-indicator {
        color: var(--green);
    }

    .expense-indicator {
        color: var(--red);
    }

    .empty-state {
        text-align: center;
        padding: 60px 20px;
        color: var(--muted);
    }

    .filter-form .form-label {
        font-weight: 600;
        font-size: 0.9rem;
        color: var(--text);
        margin-bottom: 0.5rem;
    }

    .filter-form .form-control,
    .filter-form .form-select {
        border: 1px solid var(--border);
        border-radius: 8px;
        padding: 8px 12px;
        font-size: 0.9rem;
        background: var(--card);
        color: var(--text);
    }

    .filter-form .form-control:focus,
    .filter-form .form-select:focus {
        outline: none;
        border-color: var(--blue);
        box-shadow: 0 0 0 2px rgba(0, 122, 255, 0.1);
    }

    .btn-apple {
        background: #000;
        color: white;
        border: none;
        border-radius: 8px;
        padding: 8px 16px;
        font-weight: 600;
        font-size: 0.9rem;
        transition: all 0.2s ease;
    }

    .btn-apple:hover {
        background: #333;
        color: white;
        transform: translateY(-1px);
    }

    .filter-active {
        background: linear-gradient(135deg, #007aff, #5ac8fa) !important;
        color: white !important;
    }

    .transaction-count {
        font-size: 0.9rem;
        color: var(--muted);
        font-style: italic;
    }
</style>

<div class="container-fluid px-4">
    <!-- Header -->
    <div class="transaction-header">
        <div class="row align-items-center">
            <div class="col">
                <h2 class="mb-0">ðŸ“Š Gelir/Gider Ä°ÅŸlemleri</h2>
                <p class="text-muted mb-0">TÃ¼m finansal iÅŸlemlerinizi gÃ¶rÃ¼ntÃ¼leyin ve yÃ¶netin</p>
            </div>
            <div class="col-auto">
                <a asp-action="Create" class="btn btn-apple">
                    <i class="fas fa-plus me-2"></i>Yeni Ä°ÅŸlem
                </a>
            </div>
        </div>
    </div>

    <!-- Summary Cards -->
    @if (summary != null)
    {
        <div class="row mb-4">
            <div class="col-md-3 mb-3">
                <div class="card border-0 shadow-sm">
                    <div class="card-body text-center">
                        <div class="text-success">
                            <i class="fas fa-arrow-up fa-2x mb-2"></i>
                        </div>
                        <h6 class="text-muted">Toplam Gelir</h6>
                        <h4 class="text-success">â‚º@summary.TotalIncome.ToString("N2")</h4>
                    </div>
                </div>
            </div>
            <div class="col-md-3 mb-3">
                <div class="card border-0 shadow-sm">
                    <div class="card-body text-center">
                        <div class="text-danger">
                            <i class="fas fa-arrow-down fa-2x mb-2"></i>
                        </div>
                        <h6 class="text-muted">Toplam Gider</h6>
                        <h4 class="text-danger">â‚º@summary.TotalExpense.ToString("N2")</h4>
                    </div>
                </div>
            </div>
            <div class="col-md-3 mb-3">
                <div class="card border-0 shadow-sm">
                    <div class="card-body text-center">
                        <div class="text-info">
                            <i class="fas fa-calculator fa-2x mb-2"></i>
                        </div>
                        <h6 class="text-muted">Net Tutar</h6>
                        <h4 class="@(summary.NetAmount >= 0 ? "text-success" : "text-danger")">
                            â‚º@summary.NetAmount.ToString("N2")
                        </h4>
                    </div>
                </div>
            </div>
            <div class="col-md-3 mb-3">
                <div class="card border-0 shadow-sm">
                    <div class="card-body text-center">
                        <div class="text-primary">
                            <i class="fas fa-list fa-2x mb-2"></i>
                        </div>
                        <h6 class="text-muted">Toplam Ä°ÅŸlem</h6>
                        <h4 class="text-primary">@summary.TransactionCount</h4>
                    </div>
                </div>
            </div>
        </div>
    }

    <!-- Transactions List -->
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-3">
                <h5 class="mb-0">Ä°ÅŸlemler</h5>
                <span class="transaction-count">
                    @Model.Count() transaction@(Model.Count() != 1 ? "s" : "") found
                </span>
            </div>

            @if (Model.Any())
            {
                @foreach (var transaction in Model)
                {
                    <div class="transaction-card">
                        <div class="card-body">
                            <div class="row align-items-center">
                                <div class="col-auto">
                                    <div
                                        class="@(transaction.Type == CÃ¼zdan_UygulamasÄ±.Models.TransactionType.Income ? "income-indicator" : "expense-indicator")">
                                        <i
                                            class="fas @(transaction.Type == CÃ¼zdan_UygulamasÄ±.Models.TransactionType.Income ? "fa-arrow-up" : "fa-arrow-down") fa-2x"></i>
                                    </div>
                                </div>
                                <div class="col">
                                    <h6 class="mb-1">@transaction.Description</h6>
                                    <p class="text-muted small mb-1">
                                        @transaction.Account?.Name
                                        @if (transaction.Category != null)
                                        {
                                            <span class="badge bg-light text-dark ms-2">@transaction.Category.Name</span>
                                        }
                                        @if (transaction.IsRecurring)
                                        {
                                            <span class="badge bg-info text-white ms-1">
                                                <i class="fas fa-sync-alt me-1"></i>Otomatik
                                            </span>
                                        }
                                </p>
                                <small class="text-muted">
                                    @transaction.TransactionDate.ToString("dd MMMM yyyy, HH:mm")
                                </small>
                            </div>
                            <div class="col-auto text-end">
                                <h5
                                    class="mb-2 @(transaction.Type == CÃ¼zdan_UygulamasÄ±.Models.TransactionType.Income ? "text-success" : "text-danger")">
                                    @(transaction.Type == CÃ¼zdan_UygulamasÄ±.Models.TransactionType.Income ? "+" :
                                                                    "-")â‚º@transaction.Amount.ToString("N2")
                                    </h5>
                                    <div class="btn-group">
                                        <a asp-action="Details" asp-route-id="@transaction.Id"
                                            class="btn btn-sm btn-outline-primary">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        <a asp-action="Edit" asp-route-id="@transaction.Id"
                                            class="btn btn-sm btn-outline-warning">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        <button class="btn btn-sm btn-outline-danger"
                                            onclick="deleteTransaction(@transaction.Id)">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }

                <!-- Pagination would go here -->
                <div class="d-flex justify-content-center mt-4">
                    <nav aria-label="Transaction pagination">
                        <!-- Add pagination if needed -->
                    </nav>
                </div>
            }
            else
            {
                <div class="card border-0 shadow-sm">
                    <div class="card-body empty-state">
                        <i class="fas fa-receipt fa-4x mb-3"></i>
                        <h4>HenÃ¼z iÅŸlem bulunmuyor</h4>
                        <p>Ä°lk gelir veya gider iÅŸleminizi oluÅŸturarak baÅŸlayÄ±n.</p>
                        <a asp-action="Create" class="btn btn-apple">
                            <i class="fas fa-plus me-2"></i>Ä°lk Ä°ÅŸlemimi Ekle
                        </a>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        function deleteTransaction(id) {
            Swal.fire({
                title: 'Ä°ÅŸlem Silinecek',
                text: 'Bu iÅŸlem geri alÄ±namaz ve hesap bakiyesi gÃ¼ncellenecek!',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#dc3545',
                cancelButtonColor: '#6c757d',
                confirmButtonText: 'Evet, Sil',
                cancelButtonText: 'Ä°ptal'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Create form and submit
                    const form = document.createElement('form');
                    form.method = 'POST';
                    form.action = '/Transaction/Delete/' + id;

                    // Add anti-forgery token
                    const token = document.createElement('input');
                    token.type = 'hidden';
                    token.name = '__RequestVerificationToken';
                    token.value = $('input[name="__RequestVerificationToken"]').val();
                    form.appendChild(token);

                    document.body.appendChild(form);
                    form.submit();
                }
            });
        }

        // Success/Error messages
        @if (TempData["Success"] != null)
            {
                <text>
                    Swal.fire({
                        icon: 'success',
                    title: 'BaÅŸarÄ±lÄ±!',
                    text: '@Html.Raw(TempData["Success"])',
                    timer: 3000,
                    showConfirmButton: false
                    });
                </text>
        }

            @if (TempData["Error"] != null)
            {
                <text>
                    Swal.fire({
                        icon: 'error',
                    title: 'Hata!',
                    text: '@Html.Raw(TempData["Error"])'
                    });
                </text>
        }
    </script>
}