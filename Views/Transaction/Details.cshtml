@model C√ºzdan_Uygulamasƒ±.BusinessLogic.DTOs.TransactionDto
@{
    ViewData["Title"] = $"{Model.Description} - ƒ∞≈ülem Detaylarƒ±";
}

<style>
    :root {
        --bg: #f5f5f7;
        --card: #ffffff;
        --text: #1d1d1f;
        --muted: #6e6e73;
        --blue: #007aff;
        --green: #28a745;
        --red: #dc3545;
        --border: rgba(0, 0, 0, 0.08);
        --shadow: 0 8px 30px rgba(0, 0, 0, 0.08);
        --radius: 16px;
    }

    .transaction-header {
        background: var(--card);
        border: 1px solid var(--border);
        border-radius: var(--radius);
        box-shadow: var(--shadow);
        padding: 24px;
        margin-bottom: 24px;
    }

    .transaction-card {
        background: var(--card);
        border: 1px solid var(--border);
        border-radius: var(--radius);
        box-shadow: var(--shadow);
        padding: 24px;
        margin-bottom: 20px;
    }

    .amount-display {
        text-align: center;
        padding: 30px 20px;
        border-radius: var(--radius);
        margin-bottom: 24px;
    }

    .amount-display.income {
        background: linear-gradient(135deg, var(--green), #4CAF50);
        color: white;
    }

    .amount-display.expense {
        background: linear-gradient(135deg, var(--red), #F44336);
        color: white;
    }

    .btn-apple {
        background: #000;
        color: white;
        border: none;
        border-radius: 12px;
        padding: 10px 20px;
        font-weight: 600;
        transition: all 0.2s ease;
    }

    .btn-apple:hover {
        background: #333;
        color: white;
        transform: translateY(-1px);
    }

    .info-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 20px;
        margin-bottom: 20px;
    }

    .info-card {
        background: var(--card);
        border: 1px solid var(--border);
        border-radius: 12px;
        padding: 20px;
        text-align: center;
    }

    .info-icon {
        font-size: 2rem;
        margin-bottom: 12px;
        color: var(--blue);
    }

    .info-title {
        font-size: 0.9rem;
        color: var(--muted);
        margin-bottom: 8px;
    }

    .info-value {
        font-size: 1.1rem;
        font-weight: 600;
        color: var(--text);
    }

    .detail-row {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 15px 0;
        border-bottom: 1px solid var(--border);
    }

    .detail-row:last-child {
        border-bottom: none;
    }

    .detail-label {
        font-weight: 600;
        color: var(--muted);
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .detail-value {
        color: var(--text);
        font-weight: 500;
    }

    .status-badge {
        padding: 6px 12px;
        border-radius: 20px;
        font-size: 0.85rem;
        font-weight: 600;
    }

    .recurring-badge {
        background: #e3f2fd;
        color: #1976d2;
    }

    .income-badge {
        background: #e8f5e8;
        color: #388e3c;
    }

    .expense-badge {
        background: #ffebee;
        color: #d32f2f;
    }
</style>

<div class="container-fluid px-4">
    <!-- Header -->
    <div class="transaction-header">
        <div class="row align-items-center">
            <div class="col">
                <h2 class="mb-1">üìù ƒ∞≈ülem Detaylarƒ±</h2>
                <p class="text-muted mb-0">@Model.Description</p>
            </div>
            <div class="col-auto">
                <div class="btn-group">
                    <a asp-action="Edit" asp-route-id="@Model.Id" class="btn-edit-action">
                        <i class="bi bi-pencil me-2"></i>D√ºzenle
                    </a>
                    <a asp-action="Index" class="btn-secondary-action">
                        <i class="bi bi-arrow-left me-2"></i>Geri D√∂n
                    </a>
                    <button class="btn-danger-action" onclick="deleteTransaction(@Model.Id)">
                        <i class="bi bi-trash me-2"></i>Sil
                    </button>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-4 mb-4">
            <!-- Amount Display -->
            <div
                class="amount-display @(Model.Type == C√ºzdan_Uygulamasƒ±.Models.TransactionType.Income ? "income" : "expense")">
                <div class="mb-2">
                    <i
                        class="fas @(Model.Type == C√ºzdan_Uygulamasƒ±.Models.TransactionType.Income ? "fa-arrow-up" : "fa-arrow-down") fa-2x"></i>
                </div>
                <h3 class="mb-1">
                    @(Model.Type == C√ºzdan_Uygulamasƒ±.Models.TransactionType.Income ? "+" :
                                        "-")‚Ç∫@Model.Amount.ToString("N2")
                </h3>
                <p class="mb-0 opacity-75">
                    @(Model.Type == C√ºzdan_Uygulamasƒ±.Models.TransactionType.Income ? "Gelir" : "Gider") ƒ∞≈ülemi
                </p>
            </div>

            <!-- Quick Info Cards -->
            <div class="info-grid">
                <div class="info-card">
                    <div class="info-icon">
                        <i class="bi bi-building"></i>
                    </div>
                    <div class="info-title">Hesap</div>
                    <div class="info-value">@(Model.Account?.Name ?? "Bilinmiyor")</div>
                </div>

                @if (Model.Category != null)
                {
                    <div class="info-card">
                        <div class="info-icon">
                            <i class="bi bi-tags"></i>
                        </div>
                        <div class="info-title">Kategori</div>
                        <div class="info-value">@Model.Category.Name</div>
                    </div>
                }

                <div class="info-card">
                    <div class="info-icon">
                        <i class="bi bi-calendar"></i>
                    </div>
                    <div class="info-title">Tarih</div>
                    <div class="info-value">@Model.TransactionDate.ToString("dd MMM yyyy")</div>
                </div>

                @if (Model.IsRecurring)
                {
                    <div class="info-card">
                        <div class="info-icon">
                            <i class="bi bi-arrow-repeat"></i>
                        </div>
                        <div class="info-title">Tekrar</div>
                        <div class="info-value">
                            @switch (Model.RecurrenceType)
                            {
                                case C√ºzdan_Uygulamasƒ±.Models.RecurrenceType.Monthly:
                                    <span>Aylƒ±k</span>
                                    break;
                                case C√ºzdan_Uygulamasƒ±.Models.RecurrenceType.Weekly:
                                    <span>Haftalƒ±k</span>
                                    break;
                                case C√ºzdan_Uygulamasƒ±.Models.RecurrenceType.Yearly:
                                    <span>Yƒ±llƒ±k</span>
                                    break;
                                default:
                                    <span>-</span>
                                    break;
                            }
                        </div>
                    </div>
                }
            </div>
        </div>

        <div class="col-md-8">
            <!-- Detailed Information -->
            <div class="transaction-card">
                <h5 class="mb-4">Detaylƒ± Bilgiler</h5>

                <div class="detail-row">
                    <div class="detail-label">
                        <i class="bi bi-pencil"></i>
                        A√ßƒ±klama
                    </div>
                    <div class="detail-value">@Model.Description</div>
                </div>

                <div class="detail-row">
                    <div class="detail-label">
                        <i class="bi bi-currency-dollar"></i>
                        Tutar
                    </div>
                    <div class="detail-value">
                        <span
                            class="@(Model.Type == C√ºzdan_Uygulamasƒ±.Models.TransactionType.Income ? "text-success" : "text-danger")">
                            @(Model.Type == C√ºzdan_Uygulamasƒ±.Models.TransactionType.Income ? "+" :
                                                        "-")‚Ç∫@Model.Amount.ToString("N2")
                        </span>
                    </div>
                </div>

                <div class="detail-row">
                    <div class="detail-label">
                        <i class="bi bi-tag"></i>
                        ƒ∞≈ülem T√ºr√º
                    </div>
                    <div class="detail-value">
                        <span
                            class="status-badge @(Model.Type == C√ºzdan_Uygulamasƒ±.Models.TransactionType.Income ? "income-badge" : "expense-badge")">
                            @(Model.Type == C√ºzdan_Uygulamasƒ±.Models.TransactionType.Income ? "Gelir" : "Gider")
                        </span>
                    </div>
                </div>

                <div class="detail-row">
                    <div class="detail-label">
                        <i class="bi bi-building"></i>
                        Hesap
                    </div>
                    <div class="detail-value">
                        @if (Model.Account != null)
                        {
                            <a asp-controller="Wallet" asp-action="AccountDetails" asp-route-id="@Model.Account.Id"
                                class="text-decoration-none">
                                @Model.Account.Name
                            </a>
                        }
                        else
                        {
                            <span class="text-muted">Bilinmiyor</span>
                        }
                    </div>
                </div>

                <div class="detail-row">
                    <div class="detail-label">
                        <i class="bi bi-tags"></i>
                        Kategori
                    </div>
                    <div class="detail-value">
                        @if (Model.Category != null)
                        {
                            <span class="badge bg-light text-dark">@Model.Category.Name</span>
                        }
                        else
                        {
                            <span class="text-muted">Kategori yok</span>
                        }
                    </div>
                </div>

                <div class="detail-row">
                    <div class="detail-label">
                        <i class="bi bi-calendar"></i>
                        ƒ∞≈ülem Tarihi
                    </div>
                    <div class="detail-value">@Model.TransactionDate.ToString("dddd, dd MMMM yyyy HH:mm")</div>
                </div>

                <div class="detail-row">
                    <div class="detail-label">
                        <i class="bi bi-arrow-repeat"></i>
                        Tekrar Eden ƒ∞≈ülem
                    </div>
                    <div class="detail-value">
                        @if (Model.IsRecurring)
                        {
                            <span class="status-badge recurring-badge">
                                <i class="bi bi-arrow-repeat me-1"></i>
                                @switch (Model.RecurrenceType)
                                {
                                    case C√ºzdan_Uygulamasƒ±.Models.RecurrenceType.Monthly:
                                        <span>Aylƒ±k Tekrar</span>
                                        break;
                                    case C√ºzdan_Uygulamasƒ±.Models.RecurrenceType.Weekly:
                                        <span>Haftalƒ±k Tekrar</span>
                                        break;
                                    case C√ºzdan_Uygulamasƒ±.Models.RecurrenceType.Yearly:
                                        <span>Yƒ±llƒ±k Tekrar</span>
                                        break;
                                }
                            </span>
                        }
                        else
                        {
                            <span class="text-muted">Hayƒ±r</span>
                        }
                    </div>
                </div>

                <div class="detail-row">
                    <div class="detail-label">
                        <i class="bi bi-clock"></i>
                        Olu≈üturma Tarihi
                    </div>
                    <div class="detail-value">@Model.CreatedDate.ToString("dd MMMM yyyy HH:mm")</div>
                </div>
            </div>

            <!-- Related Information -->
            @if (Model.IsRecurring)
            {
                <div class="transaction-card">
                    <h6 class="mb-3">Tekrar Eden ƒ∞≈ülem Bilgileri</h6>
                    <div class="alert alert-info">
                        <i class="bi bi-info-circle me-2"></i>
                        Bu i≈ülem @switch (Model.RecurrenceType)
                        {
                                        case C√ºzdan_Uygulamasƒ±.Models.RecurrenceType.Monthly:
                                <span>her ay</span>
                                break;
                            case C√ºzdan_Uygulamasƒ±.Models.RecurrenceType.Weekly:
                                <span>her hafta</span>
                                break;
                            case C√ºzdan_Uygulamasƒ±.Models.RecurrenceType.Yearly:
                                <span>her yƒ±l</span>
                                break;
                            }
         otomatik olarak olu≈üturulacaktƒ±r.
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

    @section Scripts {
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <script>
            function deleteTransaction(id) {
                Swal.fire({
                    title: 'ƒ∞≈ülem Silinecek',
                    text: 'Bu i≈ülem geri alƒ±namaz ve hesap bakiyesi g√ºncellenecek!',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#dc3545',
                    cancelButtonColor: '#6c757d',
                    confirmButtonText: 'Evet, Sil',
                    cancelButtonText: 'ƒ∞ptal'
                }).then((result) => {
                    if (result.isConfirmed) {
                        // Create form and submit
                        const form = document.createElement('form');
                        form.method = 'POST';
                        form.action = '/Transaction/Delete/' + id;

                        // Add anti-forgery token
                        const token = document.createElement('input');
                        token.type = 'hidden';
                        token.name = '__RequestVerificationToken';
                        token.value = $('input[name="__RequestVerificationToken"]').val();
                        form.appendChild(token);

                        document.body.appendChild(form);
                        form.submit();
                    }
                });
            }

            // Success/Error messages
            @if (TempData["Success"] != null)
                {
                    <text>
                        Swal.fire({
                            icon: 'success',
                        title: 'Ba≈üarƒ±lƒ±!',
                        text: '@Html.Raw(TempData["Success"])',
                        timer: 3000,
                        showConfirmButton: false
                        });
                    </text>
            }

                @if (TempData["Error"] != null)
                {
                    <text>
                        Swal.fire({
                            icon: 'error',
                        title: 'Hata!',
                        text: '@Html.Raw(TempData["Error"])'
                        });
                    </text>
            }
        </script>
    }