@model Cüzdan_Uygulaması.BusinessLogic.DTOs.UpdateTransactionDto
@{
    ViewData["Title"] = "İşlem Düzenle";
    var accounts = ViewBag.Accounts as Microsoft.AspNetCore.Mvc.Rendering.SelectList;
    var categories = ViewBag.Categories as IEnumerable<Microsoft.AspNetCore.Mvc.Rendering.SelectListItem>;
}

<style>
    :root {
        --bg: #f5f5f7;
        --card: #ffffff;
        --text: #1d1d1f;
        --muted: #6e6e73;
        --blue: #007aff;
        --green: #28a745;
        --red: #dc3545;
        --border: rgba(0, 0, 0, 0.08);
        --shadow: 0 8px 30px rgba(0, 0, 0, 0.08);
        --radius: 16px;
    }

    .form-container {
        max-width: 700px;
        margin: 2rem auto;
        background: var(--card);
        border: 1px solid var(--border);
        border-radius: var(--radius);
        box-shadow: var(--shadow);
        overflow: hidden;
    }

    .form-header {
        padding: 2rem 2rem 1rem 2rem;
        text-align: center;
        border-bottom: 1px solid var(--border);
    }

    .form-body {
        padding: 2rem;
    }

    .transaction-type-selector {
        display: flex;
        gap: 1rem;
        margin-bottom: 2rem;
    }

    .type-option {
        flex: 1;
        padding: 1rem;
        border: 2px solid var(--border);
        border-radius: 12px;
        text-align: center;
        cursor: pointer;
        transition: all 0.2s ease;
        background: var(--card);
    }

    .type-option:hover {
        border-color: var(--blue);
        background: rgba(0, 122, 255, 0.05);
    }

    .type-option.selected.income {
        border-color: var(--green);
        background: rgba(40, 167, 69, 0.1);
    }

    .type-option.selected.expense {
        border-color: var(--red);
        background: rgba(220, 53, 69, 0.1);
    }

    .type-icon {
        font-size: 2rem;
        margin-bottom: 0.5rem;
    }

    .type-option.income .type-icon {
        color: var(--green);
    }

    .type-option.expense .type-icon {
        color: var(--red);
    }

    .form-label {
        font-weight: 600;
        font-size: 0.95rem;
        margin-bottom: 0.5rem;
        color: var(--text);
    }

    .form-control, .form-select {
        border: 1px solid var(--border);
        border-radius: 12px;
        padding: 12px 16px;
        font-size: 1rem;
        transition: all 0.2s ease;
        background: var(--card);
        color: var(--text);
    }

    .form-control:focus, .form-select:focus {
        outline: none;
        border-color: var(--blue);
        box-shadow: 0 0 0 3px rgba(0, 122, 255, 0.1);
        background: var(--card);
    }

    .btn-apple {
        background: #000;
        color: white;
        border: none;
        border-radius: 12px;
        padding: 12px 24px;
        font-weight: 600;
        font-size: 1rem;
        transition: all 0.2s ease;
        width: 100%;
    }

    .btn-apple:hover {
        background: #333;
        color: white;
        transform: translateY(-1px);
    }

    .btn-secondary-custom {
        background: transparent;
        color: var(--muted);
        border: 1px solid var(--border);
        border-radius: 12px;
        padding: 12px 24px;
        font-weight: 600;
        transition: all 0.2s ease;
        text-decoration: none;
    }

    .btn-secondary-custom:hover {
        background: var(--border);
        color: var(--text);
        text-decoration: none;
    }

    .recurring-section {
        background: rgba(0, 122, 255, 0.05);
        border: 1px solid rgba(0, 122, 255, 0.2);
        border-radius: 12px;
        padding: 1.5rem;
        margin-top: 1rem;
        display: none;
    }

    .recurring-section.show {
        display: block;
    }

    .form-check {
        display: flex;
        align-items: center;
        gap: 0.75rem;
        margin-bottom: 1rem;
    }

    .form-check-input {
        width: 20px;
        height: 20px;
        border-radius: 6px;
    }

    .text-danger {
        color: #ff3b30 !important;
        font-size: 0.9rem;
        margin-top: 0.25rem;
    }

    .form-help {
        font-size: 0.9rem;
        color: var(--muted);
        margin-top: 0.25rem;
    }

    .input-group-text {
        background: var(--card);
        border: 1px solid var(--border);
        border-right: none;
        border-radius: 12px 0 0 12px;
        padding: 12px 16px;
        color: var(--muted);
        font-weight: 600;
    }

    .input-group .form-control {
        border-left: none;
        border-radius: 0 12px 12px 0;
    }

    .form-icon {
        color: var(--blue);
        margin-right: 0.5rem;
    }
</style>

<div class="container-fluid px-4">
    <div class="form-container">
        <div class="form-header">
            <h2 class="mb-2">
                <i class="fas fa-edit form-icon"></i>
                İşlem Düzenle
            </h2>
            <p class="text-muted mb-0">İşlem bilgilerini güncelleyin</p>
        </div>

        <div class="form-body">
            <form asp-action="Edit" method="post" novalidate>
                <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>
                
                <input asp-for="Id" type="hidden" />

                <!-- Transaction Type Selector -->
                <div class="transaction-type-selector">
                    <div class="type-option income" onclick="selectTransactionType(0)">
                        <div class="type-icon">
                            <i class="fas fa-arrow-up"></i>
                        </div>
                        <h5 class="mb-1">Gelir</h5>
                        <p class="small text-muted mb-0">Maaş, prim, satış vb.</p>
                    </div>
                    <div class="type-option expense" onclick="selectTransactionType(1)">
                        <div class="type-icon">
                            <i class="fas fa-arrow-down"></i>
                        </div>
                        <h5 class="mb-1">Gider</h5>
                        <p class="small text-muted mb-0">Alışveriş, fatura vb.</p>
                    </div>
                </div>
                <input asp-for="Type" type="hidden" id="Type" />

                <div class="row">
                    <div class="col-md-8 mb-4">
                        <label asp-for="Description" class="form-label">
                            <i class="fas fa-edit form-icon"></i>Açıklama *
                        </label>
                        <input asp-for="Description" class="form-control" 
                               placeholder="örn: Market alışverişi, Maaş ödemesi" />
                        <span asp-validation-for="Description" class="text-danger"></span>
                    </div>
                    <div class="col-md-4 mb-4">
                        <label asp-for="Amount" class="form-label">
                            <i class="fas fa-money-bill-wave form-icon"></i>Tutar *
                        </label>
                        <div class="input-group">
                            <span class="input-group-text">₺</span>
                            <input asp-for="Amount" class="form-control" 
                                   placeholder="0,00" step="0.01" type="number" />
                        </div>
                        <span asp-validation-for="Amount" class="text-danger"></span>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6 mb-4">
                        <label asp-for="AccountId" class="form-label">
                            <i class="fas fa-university form-icon"></i>Hesap *
                        </label>
                        <select asp-for="AccountId" asp-items="accounts" class="form-select">
                            <option value="">Hesap seçin...</option>
                        </select>
                        <span asp-validation-for="AccountId" class="text-danger"></span>
                    </div>
                    <div class="col-md-6 mb-4">
                        <label asp-for="CategoryId" class="form-label">
                            <i class="fas fa-tags form-icon"></i>Kategori
                        </label>
                        <select asp-for="CategoryId" asp-items="categories" class="form-select" id="CategoryId">
                            <option value="">Kategori seçin (isteğe bağlı)</option>
                        </select>
                        <span asp-validation-for="CategoryId" class="text-danger"></span>
                    </div>
                </div>

                <div class="mb-4">
                    <label asp-for="TransactionDate" class="form-label">
                        <i class="fas fa-calendar form-icon"></i>İşlem Tarihi *
                    </label>
                    <input asp-for="TransactionDate" class="form-control" type="datetime-local" />
                    <span asp-validation-for="TransactionDate" class="text-danger"></span>
                    <div class="form-help">İşlemin gerçekleştiği tarih ve saat</div>
                </div>

                <!-- Recurring Transaction -->
                <div class="form-check">
                    <input asp-for="IsRecurring" class="form-check-input" type="checkbox" 
                           onchange="toggleRecurringSection()" />
                    <label asp-for="IsRecurring" class="form-check-label">
                        <strong>Otomatik Tekrar Eden İşlem</strong>
                        <div class="form-help">Bu işlem düzenli olarak tekrarlanacak</div>
                    </label>
                </div>

                <div class="recurring-section" id="recurringSection">
                    <div class="mb-3">
                        <label asp-for="RecurrenceType" class="form-label">
                            <i class="fas fa-sync-alt form-icon"></i>Tekrar Sıklığı
                        </label>
                        <select asp-for="RecurrenceType" class="form-select">
                            <option value="">Sıklık seçin...</option>
                            <option value="0">Aylık</option>
                            <option value="1">Haftalık</option>
                            <option value="2">Yıllık</option>
                        </select>
                        <div class="form-help">Bu işlem ne sıklıkla otomatik olarak tekrarlanacak?</div>
                    </div>
                </div>

                <div class="row mt-4">
                    <div class="col-md-6 mb-2">
                        <a asp-action="Index" class="btn-secondary-action w-100">
                            <i class="fas fa-arrow-left me-2"></i>İptal Et
                        </a>
                    </div>
                    <div class="col-md-6">
                        <button type="submit" class="btn-primary-action w-100">
                            <i class="fas fa-save me-2"></i>Değişiklikleri Kaydet
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Focus on description
            document.querySelector('input[name="Description"]').focus();

            // Initialize dynamic category filtering
            initializeCategoryFiltering();

            // Set transaction type based on model value
            selectTransactionType(@((int)Model.Type));
            
            // Show/hide recurring section based on current value
            if (document.querySelector('input[name="IsRecurring"]').checked) {
                document.getElementById('recurringSection').classList.add('show');
            }
        });

        function selectTransactionType(type) {
            const options = document.querySelectorAll('.type-option');
            const typeInput = document.getElementById('Type');
            
            options.forEach(option => option.classList.remove('selected'));
            
            if (type === 0) { // Income
                options[0].classList.add('selected');
                typeInput.value = 0;
            } else { // Expense
                options[1].classList.add('selected');
                typeInput.value = 1;
            }
            
            // Trigger category update after setting the type
            if (window.updateCategoryOptionsFromType) {
                window.updateCategoryOptionsFromType();
            }
        }

        function toggleRecurringSection() {
            const checkbox = document.querySelector('input[name="IsRecurring"]');
            const section = document.getElementById('recurringSection');
            
            if (checkbox.checked) {
                section.classList.add('show');
            } else {
                section.classList.remove('show');
                // Reset recurrence type
                document.querySelector('select[name="RecurrenceType"]').value = '';
            }
        }
    </script>
}